security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt


    role_hierarchy:
        ROLE_ADMIN_PARTENAIRE: ROLE_USER_PARTENAIRE
        ROLE_PARTENAIRE: [ROLE_ADMIN_PARTENAIRE, ROLE_USER_PARTENAIRE]
        ROLE_ADMIN_SYSTEME: ROLE_CAISSIER_SYSTEME
        ROLE_SUPER_ADMIN_SYSTEME: [ROLE_ADMIN_SYSTEME, ROLE_ALLOWED_TO_SWITCH]

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        entity_provider:
            entity:
                class: App\Entity\User
                property: username

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        
        login:
            pattern: ^/login
            stateless: true
            anonymous: true
            provider: entity_provider
            user_checker: App\Security\UserChecker
            json_login:
                check_path: /login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        
        creationuser:
            pattern: ^/creationuser
            stateless: true
            anonymous: false
            provider: entity_provider
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        
        api:
            pattern: ^/api
            stateless: true
            anonymous: false
            provider: entity_provider
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/creationuser, roles: IS_AUTHENTICATED_FULLY }
         - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
         - { path: ^/docs, roles: IS_AUTHENTICATED_ANONYMOUSLY }
